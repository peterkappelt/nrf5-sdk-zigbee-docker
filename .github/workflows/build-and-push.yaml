name: Create and publish the container

on:
  - push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    strategy:
      matrix:
        gcc_version:
          - 8-2018-q4-major
          - 9-2019-q4-major
          - 10-2020-q4-major
          - 10.3-2021.10
        sdk_version:
          - 4.2.0
          - 4.1.0
          - 4.0.0
          - 3.2.0
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - run: pip install requests

      - name: Fetch SDK ${{ matrix.sdk_version }}
        id: fetch_sdk
        run: >-
          echo "sdk_folder=$(
            python fetch-nrf5-sdk.py ${{ matrix.sdk_version }}
          )" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create docker tag based on matrix build
        id: docker_tag
        run: echo "tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sdk-${{ matrix.sdk_version }}-gcc-${{ matrix.gcc_version }}" >> $GITHUB_OUTPUT

      - name: Build and push container image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            GCC_VERSION=${{ matrix.gcc_version }}
            SDK_FOLDER=${{ steps.fetch_sdk.outputs.sdk_folder }}
          tags: ${{ steps.docker_tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
      
